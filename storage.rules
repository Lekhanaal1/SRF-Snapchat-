rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*')
        && request.resource.size < 5 * 1024 * 1024; // 5MB max
    }

    // Moments images
    match /moments/{userId}/{imageId} {
      allow read: if true; // Anyone can view images
      allow create: if isAuthenticated()
        && request.auth.uid == userId
        && isValidImage();
      allow delete: if isAuthenticated()
        && request.auth.uid == userId;
    }

    // Profile images
    match /profiles/{userId}/profile.jpg {
      allow read: if true;
      allow write: if isAuthenticated()
        && request.auth.uid == userId
        && isValidImage();
    }

    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 